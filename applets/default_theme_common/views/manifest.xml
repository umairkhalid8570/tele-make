<?xml version="1.0" encoding="UTF-8"?>
<tele>
	<template id="manifest" name="Webapp Manifest">
	{
	    "name": "<t t-out="app_name_pwa"/>",
	    "short_name": "<t t-out="short_name_pwa"/>",
	    "icons": [{
	        "sizes": "192x192",
	        "src": "<t t-out="image_192_pwa"/>",
	        "type": "image/png"
	    },{
	        "sizes": "512x512",
	        "src": "<t t-out="image_512_pwa"/>",
	        "type": "image/png"
	    }],
	    "start_url": "<t t-out="start_url_pwa" />",
	    "display": "standalone",
	    "scope": "/",
	    "background_color": "<t t-out="background_color_pwa"/>",
	    "theme_color": "<t t-out="theme_color_pwa"/>"
	}
</template>

<template id="service_worker" name="PWA service worker">
    'use strict';
        var base_cache_ver = 'base-cache-1';
        var assets = ['/','/pwa/offline'];
        self.addEventListener('install', function(event) {
            self.skipWaiting();
            event.waitUntil(
                caches.open(base_cache_ver).then(cache =>{
                    cache.addAll(assets);
                })
            )
        });
        self.addEventListener('activate', function(event) {
            event.waitUntil(
                caches.keys().then(function(keys) {
                    return Promise.all(keys.map(function(key) {
                        if (key !== base_cache_ver) {
                            return caches.delete(key);
                        }
                    }));
                })
            );
        });
        self.addEventListener('fetch', function(event) {
            event.respondWith(
                fetch(event.request).then(function (response) {
                    return response;
                })
                .catch(error => {
                    return caches.match('/pwa/offline');
            }));
        });
    </template>

    <template id="layout" name="Main layout" inherit_id="portal.frontend_layout">
        <xpath expr="//head" position="inside">
            <t t-set="enable_pwa" t-value="request.env['website'].sudo().get_current_website().enable_pwa"/>
            <t t-if="enable_pwa">
              <t t-set="website" t-value="request.env['website'].search([('id', '=', website_id)]) if website_id else request.website"/>
                <link rel="manifest" t-att-href="'/default_theme_common/manifest/%s' % (website.id)"/>
                <meta name="apple-mobile-web-app-status-bar-style" content="black"/>
                <meta name="apple-mobile-web-app-title" content="PWA"/>
                
                <link rel="apple-touch-icon" t-att-href="'/web/image/website/%s/image_512_pwa/152x152' % (website.id)"/>
                <meta name="apple-mobile-web-app-capable" content="yes"/>
            </t>
        </xpath>
    </template>

</tele>